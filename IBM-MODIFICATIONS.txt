Adding fixes to XHRHelper class to successfully work with Angular JS.
- Cordova RTC work item number: 60654
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-7444, https://issues.apache.org/jira/browse/CB-7843, https://issues.apache.org/jira/browse/CB-7892
- Markmail or Google Group reference: n/a
- Product PMR: 65567,650,758
- APAR: PI31953 - Item 60655
- Cherry-pick: d2aeff23032f5d3705cb262d6d7a3e30e6f2b049, e693d147b87641fcc2f341dbea7bc7c73d14f9e1, 6bb3fc38a4d67cf378e1b11839c4af327ebfccd5
- Description: Main issue is that the window.__XHRShimAliases object gets recreated when window location changes, causing that callbacks for XHR calls are never getting received. 
A condition was added to define if the object is already present, and avoid unnecessary recreation. Another fix was added to properly process a callback when the file doesn't exists. 
The last one was added to fix an angular use case, to avoid reload on InjectScript Method when the url is changed.

Fix XHRHelper doesn't resolve request using relative file path
- Cordova RTC work item number: 51127
- Apache Cordova Jira issue: https://issues.apache.org/jira/browse/CB-7338
- Markmail or Google Group reference: n/a
- Product PMR: 81056,841,758
- Worklight RTC work item number: 49576
- Associated mobile-spec test: local XHR Tests - cordova-mobile-spec repository, branch 3.4.x. All green over WP 8.1 & 8.0.
- Cherry-pick 3dbe46184c5846653dc553ea8984d1736380f0bc, 18ec1c3af674007e48bf34dcdf3fc7ee0be8ba10, efaf559ae846567e68e4d96446c8760c3ceed8fc, 8829719bbbca1e92670f4576f7baa5e6e4701b9a (Fix related to this Jira issue - CB-7338), this cherry picks were added to resolve problems over Windows Phone 8.1.
- Description: Windows Phone native side wasn't resolving XMLHttpRequest, the URL provided for an XHR call, at times contains some unwanted extra slashes, like: 'x-wmapp0: /www or //www'. Added regular expresion to the js script code to remove any ----> ':/, ://, :///' , any slash after 'x-wmapp0:', in that way the URI class it will be successfully resolved and provide the requested content. Also try-catch statements were added, over the 'Browser.InvokeScript' statements, to avoid: 'A first chance exception of type 'System.OutOfMemoryException' occurred in Microsoft.Phone.Interop.ni.dll', that stops the application.
